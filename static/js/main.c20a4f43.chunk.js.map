{"version":3,"sources":["App.js","serviceWorker.js","About.js","Work.js","index.js"],"names":["browser","Bowser","window","ContextClass","start","performance","Container","Math","Button","NameTitle","Description","Row","Link","useState","Uint8Array","useEffect","t","document","context","setCtx","anal","fetch","resp","buf","buffer","console","src","setAnalyzer","setFreqs","setSource","setLoading","e","source","THREE","scene","group","camera","renderer","alpha","antialias","icosahedronGeometry","lambertMaterial","color","wireframe","ball","ambientLight","spotLight","animate","requestAnimationFrame","currentTime","ctx","analyzer","mesh","freqs","randIndex","time","noise","vertex","distance","i","makeRoughBall","className","id","onClick","setPlaying","style","alignItems","fontSize","marginRight","marginTop","width","height","objectFit","loading","isPlaying","opacity","transform","href","onPlay","onPause","onCanPlayThrough","crossOrigin","loop","controls","Boolean","location","hostname","match","TextContainer","SectionTitle","Paragraph","Image","p","VertLine","Badge","Content","Title","WorkItem","DateString","useVisible","ref","percentVisible","zIndex","top","left","position","background","BigTitle","CUSTOM_LABELS_GALLERY","TEXTRACT_GALLERY","ReactDOM","render","StrictMode","path","component","loaded","float","onLoad","setLoaded","marginLeft","download","cursor","fontFamily","Head","Gallery","url","data-attribute","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c20a4f43.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { styled } from \"linaria/react\";\nimport SimplexNoise from \"simplex-noise\";\nimport \"./App.css\";\nimport Bowser from \"bowser\";\n\nlet browser = Bowser.getParser(window.navigator.userAgent).getBrowserName();\nlet ContextClass = window.webkitAudioContext || window.AudioContext;\n\nlet start = performance.now();\nlet RandomValue = Math.random();\nconst Container = styled.div`\n  position: absolute;\n  background: black;\n  font-family: Orbitron;\n  color: white;\n  font-size: 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  audio {\n  }\n`;\n\nconst Button = styled.div`\n  color: white;\n  font-family: Raleway;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: 25px;\n  padding: 20px;\n  cursor: pointer;\n  color: red;\n  transition: all 0.3s ease;\n  &:hover {\n    color: white;\n  }\n`;\n\nconst NameTitle = styled.div`\n  transition: all 3s ease;\n  transition-delay: 2s;\n  position: absolute;\n`;\n\nconst Description = styled.div`\n  font-family: Raleway;\n  color: white;\n  font-size: 39px;\n  padding-top: 6px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: \"row\";\n  justify-content: space-between;\n`;\n\nconst Link = styled.a`\n  cursor: pointer;\n  padding-top: 15px;\n  font-size: 30px;\n  color: white;\n  &:hover {\n    transform: translateY(-3px);\n  }\n  transition: all 0.3s ease;\n`;\n\nfunction makeRoughBall(mesh, freqs = [], time) {\n  let randIndex = Math.floor(-0.005 + time / 4.0) + 2;\n  var noise = new SimplexNoise(randIndex);\n  mesh.geometry.vertices.forEach(function (vertex, i) {\n    let rf = 0.02;\n    let time = performance.now() % 100;\n    vertex.normalize();\n    var distance =\n      6 +\n      (performance.now() - start) / 15000 +\n      4 *\n        noise.noise3D(\n          vertex.x + Math.floor(time / 1000) * rf * 7,\n          vertex.y + Math.floor(time / 1000) * rf * 8,\n          vertex.z + Math.floor(time / 1000) * rf * 9\n        ) +\n      (0.6 * (freqs[i % freqs.length] || 0)) / 128;\n    vertex.multiplyScalar(distance);\n  });\n  mesh.geometry.verticesNeedUpdate = true;\n  mesh.geometry.normalsNeedUpdate = true;\n}\nfunction App() {\n  let [analyzer, setAnalyzer] = useState();\n  let [ctx, setCtx] = useState();\n  let [freqs, setFreqs] = useState(new Uint8Array(1024));\n  let [loading, setLoading] = useState(browser !== \"Firefox\");\n  let [isPlaying, setPlaying] = useState(false);\n  let [source, setSource] = useState();\n  useEffect(() => {\n    let t = document.getElementById(\"foo\");\n    if (t && !analyzer) {\n      let context = new ContextClass();\n      setCtx(context);\n      let anal = context.createAnalyser();\n      if (browser === \"Safari\") {\n        fetch(\n          \"https://pk-resume.s3-us-west-2.amazonaws.com/Max+Cooper+-+Resynthesis+Original+Mix+Mesh-www.groovytunes.org.mp3\"\n        )\n          .then((resp) => resp.arrayBuffer())\n          .then(\n            (buf) =>\n              new Promise((res, rej) => {\n                context.decodeAudioData(buf, res, rej);\n              })\n          )\n          .then((buffer) => {\n            console.log(\"here\");\n            let src = context.createBufferSource();\n            src.buffer = buffer;\n            src.connect(anal);\n            anal.connect(context.destination);\n            setAnalyzer(anal);\n            setFreqs(new Uint8Array(anal.frequencyBinCount));\n            setSource(src);\n            setLoading(false);\n          })\n          .catch((e) => console.log(e));\n      } else {\n        let source = context.createMediaElementSource(t);\n        let anal = context.createAnalyser();\n        source.connect(anal);\n        anal.connect(context.destination);\n        setAnalyzer(anal);\n        setFreqs(new Uint8Array(anal.frequencyBinCount));\n      }\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    if (window.THREE && analyzer && !document.getElementById(\"fark\")) {\n      const THREE = window.THREE;\n\n      //here comes the webgl\n      var scene = new THREE.Scene();\n      var group = new THREE.Group();\n      var camera = new THREE.PerspectiveCamera(\n        20,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        1000\n      );\n      camera.position.set(0, 0, 100);\n      camera.lookAt(scene.position);\n      scene.add(camera);\n\n      var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n        antialias: true,\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.getElementById(\"App\").prepend(renderer.domElement);\n      renderer.domElement.id = \"fark\";\n\n      var icosahedronGeometry = new THREE.IcosahedronGeometry(2, 4);\n      var lambertMaterial = new THREE.MeshLambertMaterial({\n        color: \"red\",\n        wireframe: true,\n      });\n\n      var ball = new THREE.Mesh(icosahedronGeometry, lambertMaterial);\n      ball.position.set(0, 0, 0);\n      group.add(ball);\n\n      var ambientLight = new THREE.AmbientLight(0xaaaaaa);\n      scene.add(ambientLight);\n\n      var spotLight = new THREE.SpotLight(0xffffff);\n      spotLight.intensity = 0.9;\n      spotLight.position.set(-10, 40, 20);\n      spotLight.lookAt(ball);\n      spotLight.castShadow = true;\n      scene.add(spotLight);\n\n      scene.add(group);\n      renderer.render(scene, camera);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n        group.rotation.y += 0.003;\n        if (analyzer) {\n          let currentTime = 0;\n          if (browser === \"Safari\") {\n            currentTime = ctx.currentTime;\n          } else {\n            if (document.getElementById(\"foo\"))\n              currentTime = document.getElementById(\"foo\").currentTime;\n          }\n          analyzer.minDecibels = -100;\n          analyzer.maxDecibels = 0;\n          analyzer.getByteTimeDomainData(freqs);\n          makeRoughBall(ball, freqs, currentTime);\n        }\n      };\n\n      animate();\n    }\n  }, [window.THREE, analyzer, freqs, isPlaying, ctx]);\n\n  return (\n    <Container className=\"App\" id=\"App\">\n      <Button\n        id=\"fee\"\n        onClick={() => {\n          if (isPlaying) {\n            if (browser === \"Safari\") {\n              if (source.playbackState !== 3) {\n                source.stop(0);\n              }\n            } else {\n              document.getElementById(\"foo\").pause();\n            }\n            setPlaying(false);\n          } else {\n            if (browser === \"Safari\") {\n              if (source.playbackState !== 3) {\n                source.start(0);\n              } else {\n                window.location.reload();\n              }\n            } else {\n              document.getElementById(\"foo\").play();\n            }\n            setPlaying(true);\n          }\n        }}\n      >\n        <Row style={{ color: \"white\", alignItems: \"center\", fontSize: 32 }}>\n          <img\n            style={{\n              marginRight: 10,\n              marginTop: 6,\n              width: 45,\n              height: 45,\n              objectFit: \"cover\",\n            }}\n            src={\n              loading\n                ? \"https://media1.giphy.com/media/LsLK01Ko9Kf6M/source.gif\"\n                : isPlaying\n                ? \"https://pk-resume.s3-us-west-2.amazonaws.com/play-pause-button-transparent-13.png\"\n                : \"https://pk-resume.s3-us-west-2.amazonaws.com/play-pause-button-transparent-13.png\"\n            }\n          />\n          {loading ? \"loading\" : isPlaying ? \"pause\" : \"play\"}\n        </Row>\n      </Button>\n      <NameTitle\n        style={{\n          opacity: analyzer ? 1 : 0,\n          transform: `translatey(${analyzer ? 0 : -10}px)`,\n        }}\n      >\n        Paul kanG\n        <Description>software engineer</Description>\n        <Row>\n          <Link href=\"#/work\">work</Link>\n          <Link href=\"#/about\">about</Link>\n        </Row>\n        <div style={{ height: 30 }} />\n        <audio\n          onPlay={() => setPlaying(true)}\n          onPause={() => setPlaying(false)}\n          onCanPlayThrough={() => {\n            if (browser !== \"Safari\") {\n              setLoading(false);\n            }\n          }}\n          crossOrigin=\"anonymous\"\n          loop\n          id=\"foo\"\n          controls={browser !== \"Safari\"}\n        >\n          <source\n            src={\n              browser === \"Safari\"\n                ? \"\"\n                : \"https://pk-resume.s3-us-west-2.amazonaws.com/Max+Cooper+-+Resynthesis+Original+Mix+Mesh-www.groovytunes.org.mp3\"\n            }\n          ></source>\n        </audio>\n      </NameTitle>\n    </Container>\n  );\n}\n\n//\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\nimport { styled } from \"linaria/react\";\nconst Container = styled.div`\n  color: white;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst TextContainer = styled.div`\n  max-width: 1000px;\n  width: 100%;\n  padding: 0px 30px;\n`;\n\nconst SectionTitle = styled.h3`\n  font-family: Orbitron;\n  font-size: 60px;\n  color: red;\n  @media only screen and (max-width: 600px) {\n    font-size: 40px;\n  }\n`;\n\nconst Paragraph = styled.p`\n  font-family: Raleway;\n  line-height: 1.6em;\n  font-size: 25px;\n  margin-top: -30px;\n  margin-left: 5px;\n  a {\n    color: red;\n  }\n  @media only screen and (max-width: 600px) {\n    font-size: 20px;\n    a {\n      margin: 0 !important;\n    }\n  }\n`;\n\nconst Image = styled.img`\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 200px;\n  border-radius: 100%;\n  margin-right: 30px;\n  border: 6px solid red;\n  float: left;\n  @media only screen and (max-width: 600px) {\n    max-width: 100%;\n  }\n  opacity: ${(p) => (p.loaded ? 1 : 0)};\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Button = styled.div`\n  color: white;\n  font-family: Raleway;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: 25px;\n  padding: 20px;\n  cursor: pointer;\n  color: red;\n  transition: all 0.3s ease;\n  &:hover {\n    color: white;\n  }\n`;\n\nexport default () => {\n  let [loaded, setLoaded] = useState(false);\n  return (\n    <Container>\n      <a href=\"#\">\n        <Button>{\"<\"}back</Button>\n      </a>\n      <TextContainer>\n        <div style={{ height: 60 }}></div>\n\n        <SectionTitle>Bio</SectionTitle>\n        <Paragraph>\n          {!loaded && (\n            <div style={{ width: 200, height: 200, float: \"left\" }} />\n          )}\n          <Image\n            onLoad={() => setLoaded(true)}\n            {...{ loaded }}\n            src=\"https://pk-resume.s3-us-west-2.amazonaws.com/27892933_423327414762672_6560785457737629696_n.jpg\"\n          />\n          <b>I'm Paul</b>, your friendly neighborhood front-end engineer. For\n          the past six years, I've worked in the field of Computer Vision to\n          make complex Machine Learning concepts accessible to everyone.\n        </Paragraph>\n        <br></br>\n        <Paragraph>\n          I helped build the facial recognition technology used by{\" \"}\n          <a href=\"https://www.thorn.org/about-our-fight-against-sexual-exploitation-of-children/\">\n            Thorn\n          </a>{\" \"}\n          to fight sex trafficking. I also worked heavily on the document\n          analysis service used by{\" \"}\n          <a href=\"https://aws.amazon.com/textract/customers/\">\n            Change Healthcare\n          </a>{\" \"}\n          to process medical documents for millions of patients, as well as by\n          the Washington Post to digitize their news platform. It's important to\n          me that the things I build are used by the right people, for the right\n          reasons.\n        </Paragraph>\n        <br></br>\n        <Paragraph>\n          <b>The future is coming faster by the day.</b> For those of us with\n          the power to enact change, it is our duty to ensure the march of\n          progress doesn't trample over the rare and precious things that make\n          us human.\n        </Paragraph>\n        <SectionTitle style={{ color: \"white\", fontSize: 40 }}>\n          Get in touch\n        </SectionTitle>\n        <Paragraph>\n          <Row>\n            <div>\n              Email:{\"    \"}\n              <a style={{ marginLeft: 46 }} href=\"mailto:paulkang@amazon.com\">\n                solipsistic@berkeley.edu\n              </a>\n            </div>\n            <div>\n              Github:{\" \"}\n              <a style={{ marginLeft: 33 }} href=\"https://github.com/sollipse\">\n                sollipse\n              </a>\n            </div>\n\n            <div>\n              LinkedIn:{\" \"}\n              <a\n                style={{ marginLeft: 10 }}\n                href=\"https://www.linkedin.com/in/paul-kang-67a75494/\"\n              >\n                Paul Kang\n              </a>\n            </div>\n          </Row>\n        </Paragraph>\n      </TextContainer>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { styled, css } from \"linaria/react\";\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\";\nimport { useVisible } from \"react-hooks-visible\";\nconst Container = styled.div`\n  position: relative;\n  margin: 100px;\n  @media only screen and (max-width: 600px) {\n    margin: 0;\n  }\n`;\n\nconst VertLine = styled.div`\n  height: 100%;\n  width: 10px;\n  background: white;\n  border-radius: 5px;\n  position: absolute;\n  @media only screen and (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  padding-bottom: 120px;\n`;\n\nlet Badge = styled.div`\n  z-index: 0;\n  height: 40px;\n  background: red;\n  margin-left: -60px;\n  color: white;\n  font-family: Raleway;\n  font-size: 30px;\n  border-radius: 5px;\n  padding: 5px;\n  @media only screen and (max-width: 600px) {\n    display: none;\n  }\n  transition: all 0.3s ease;\n`;\n\nlet Content = styled.div`\n  transition: opacity 1s ease;\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n  margin-top: -30px;\n  width: 100%;\n  color: white;\n  margin-left: 100px;\n  max-width: 900px;\n  font-size: 25px;\n  font-family: Raleway;\n  line-height: 1.4em;\n  position: relative;\n  @media only screen and (max-width: 600px) {\n    width: calc(100% - 90px);\n    margin-left: 5px;\n    font-size: 17px;\n  }\n  li {\n    margin: 10px 0px;\n  }\n  --borderWidth: 3px;\n  background: #1d1f20;\n  position: relative;\n  border-radius: var(--borderWidth);\n  &:after {\n    content: \"\";\n    top: calc(-1 * var(--borderWidth));\n    left: calc(-1 * var(--borderWidth));\n    height: calc(100% + var(--borderWidth) * 2);\n    width: calc(100% + var(--borderWidth) * 2);\n    background: linear-gradient(0deg, black, black, black, white, white, white);\n    position: absolute;\n    z-index: -1;\n    animation: animatedgradient 3s ease alternate infinte;\n    background-size: 300% 300%;\n  }\n\n  @keyframes animatedgradient {\n    0% {\n      background-position: 100% 100%;\n    }\n    50% {\n      background-position: 50% 50%;\n    }\n    100% {\n      background-position: 0% 0%;\n    }\n  }\n`;\n\nconst Title = styled.div`\n  font-family: Orbitron;\n  font-size: 35px;\n  a {\n    color: white;\n    transition: 0.3s ease;\n    &:hover {\n      color: red;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    margin-left: 0;\n    font-size: 25px;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: contain;\n  border: 2px solid white;\n  margin-right: 30px;\n`;\n\nconst Button = styled.div`\n  color: white;\n  font-family: Raleway;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: 25px;\n  padding: 20px;\n  cursor: pointer;\n  color: red;\n  transition: all 0.3s ease;\n  &:hover {\n    color: white;\n  }\n`;\n\nconst WorkItem = ({ Head, Description, Gallery, DateString }) => {\n  const [targetRef, percentVisible] = useVisible();\n  return (\n    <Row ref={targetRef}>\n      <Badge style={{ opacity: percentVisible > 0.1 ? 1 : 0 }}>\n        {DateString}\n      </Badge>\n      <Content\n        style={{\n          opacity: percentVisible < 0.3 ? 0 : 1,\n          transform:\n            window.innerWidth < 600\n              ? \"\"\n              : `translateX(${20 - percentVisible * 20}px)`,\n        }}\n      >\n        <div style={{ zIndex: 1 }}>\n          <Title>{Head}</Title>\n          {Description}\n          {Gallery}\n        </div>\n        <div\n          style={{\n            top: 0,\n            left: 0,\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            background: \"black\",\n          }}\n        ></div>\n      </Content>\n    </Row>\n  );\n};\n\nconst BigTitle = styled.h1`\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-family: Orbitron;\n  font-size: 50px;\n  text-align: right;\n  width: calc(100% - 100px);\n  @media only screen and (max-width: 600px) {\n    margin-left: 0;\n    font-size: 35px;\n    margin-bottom: 60px;\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst CUSTOM_LABELS_GALLERY = [\n  \"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F321357%2Fb5b65ee9-de9c-c62a-9956-790c1da759bd.png?ixlib=rb-1.2.2&auto=format&gif-q=60&q=75&w=1400&fit=max&s=7921bbf2cf4538c1d6c5f42aac174390\",\n  \"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F321357%2Fe1d275c5-0e15-b019-b621-f84e11c6a922.png?ixlib=rb-1.2.2&auto=format&gif-q=60&q=75&w=1400&fit=max&s=27a51afc9864a2354628958990ce49c3\",\n  \"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F321357%2Fbd539c08-5dc3-f0cd-9523-aa0875a41711.png?ixlib=rb-1.2.2&auto=format&gif-q=60&q=75&w=1400&fit=max&s=4ce872bd35f489aff93ad954d95d5ffc\",\n  \"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F321357%2Ff3aa0282-1c8e-d8a2-2524-e37c3bc6e4ea.png?ixlib=rb-1.2.2&auto=format&gif-q=60&q=75&w=1400&fit=max&s=09402dbfa7d9d25b422bd9c086a4d156\",\n];\n\nconst TEXTRACT_GALLERY = [\n  \"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2019/05/30/textract-ga-1.gif\",\n  \"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2019/05/30/textract-ga-2.gif\",\n  \"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2019/05/30/textract-ga-3.gif\",\n  \"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2019/05/30/textract-ga-4.gif\",\n];\nexport default () => (\n  <SimpleReactLightbox>\n    <a href=\"#\">\n      <Button>{\"<\"}back</Button>\n    </a>\n    <div style={{ height: 60 }}></div>\n    <BigTitle>\n      Work Timeline\n      <a\n        download\n        style={{\n          color: \"white\",\n          cursor: \"pointer\",\n          fontSize: 20,\n          fontFamily: \"Raleway\",\n        }}\n        href=\"https://pk-resume.s3-us-west-2.amazonaws.com/Awesome_CV+(1).pdf\"\n      >\n        download resume\n      </a>\n    </BigTitle>\n\n    <Container>\n      <VertLine />\n      <WorkItem\n        DateString={\"01/2020\"}\n        Head={\n          <a href=\"https://console.aws.amazon.com/rekognition/custom-labels\">\n            Custom Labels\n          </a>\n        }\n        Description={\n          <p>\n            The AWS Custom Labels console allows users without Machine Learning\n            experience to train AI models capable of detecting custom objects.\n            <br />\n            Some applications of this technology include:\n            <ul>\n              <li>\n                Measuring how many times a product organically appears in the\n                Twitter and Instagram live feeds.\n              </li>\n              <li>Sorting product by ripeness and size</li>\n              <li>Identifying malformed, warped, or miscolored products.</li>\n              <li>Identifying counterfeit products.</li>\n            </ul>\n            The fundamental goal of Custom Labels is to create way for\n            professions such as agriculture, fashion and construction to\n            leverage the power of machine learning in their fields, without\n            requiring a technical backround or engineering degree.\n          </p>\n        }\n        Gallery={\n          <SRLWrapper>\n            {CUSTOM_LABELS_GALLERY.map((url) => (\n              <a href={url} data-attribute=\"SRL\">\n                <Image src={url} />\n              </a>\n            ))}\n          </SRLWrapper>\n        }\n      />\n\n      <WorkItem\n        DateString={\"09/2019\"}\n        Head={\n          <a href=\"https://console.aws.amazon.com/textract/home\">Textract</a>\n        }\n        Description={\n          <p>\n            Textract allows customers to pull raw text, key-values, and tables\n            out of images of documents. This allows businesses and government\n            organizations to automate the time-consuming and hard-to-scale\n            process of data entry.\n            <br></br>\n            <br></br>\n            Files processed through Textract are CSV compatible: an organization\n            can take millions of tax forms, or loan applications, and digitize\n            them searchably and sanely.\n            <br></br>\n            <br></br>\n            As of the 2020 pandemic, Textract has been used extensively by\n            multiple departments of the US government to process millions of\n            loan and aid application documents.\n          </p>\n        }\n        Gallery={\n          <SRLWrapper>\n            {TEXTRACT_GALLERY.map((url) => (\n              <a href={url} data-attribute=\"SRL\">\n                <Image src={url} />\n              </a>\n            ))}\n          </SRLWrapper>\n        }\n      />\n    </Container>\n  </SimpleReactLightbox>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./About\";\nimport Work from \"./Work\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/work\" component={Work} />\n        <Route path=\"/\" component={App} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}